Good use of git - good commit messages

Great start to the code.

You should have a .gitignore file so that you don't add binary files such as .pyc and .pdf files to the repository.

Do not leave my teaching comments:
# If you are using Python 2.7 rather than Python 3, import various
# functions from Python 3 such as to use real number division
# rather than integer division. ie 3/2  = 1.5  rather than 3/2 = 1
#from __future__ import absolute_import, division, print_function
at the top of files

In CTCS, you could reuse the function FTCS for the first time step.

All your code, including your comments should be written in lines less than 80 characters. See the guidelines at 
https://www.dropbox.com/s/yba7pj7woyvv7hs/goodCode.pdf?dl=1

I have added lines to linearAdvect.py in order to call your CTCS function and it does not run. You really should have asked about this in class or on the discussion site before handing in your code.

You wrote:
for it in range(nt)-1:
which should be
for it in range(nt-1):

In your implementation of FTCS in CTCS you set phi2 to be phi every time around the loop over space. You should only set phi2 once, after you have updated all the phis.

Keep your comments indented the same as your code.

Your line:
            phi[j] = phi2[j] - c\
                     (phiOld[(j+1)%nx] - phiOld[(j-1)%nx])
is missing a * sign after the c. It should be:
            phi[j] = phi2[j] - c*\
                     (phiOld[(j+1)%nx] - phiOld[(j-1)%nx])

In linearAdvect.py you have written the line:
phiFTCS = FTBS(phiOld.copy(), c, nt)
so you are setting a variable called phiFTCS to the results from funciton FTBS. This is confusing.

In BTCS, do not invert matrix M. This becomes prohibitively expensive for large models. Use 
phi = nplinalg.solve(M, phi)
instead. 

I had to add code to advectionSchemes.py to test BTCS aswell. You really should have done this.

You will need to calculate more diagnostics analysing the behaviour of your schemes.

Also use the square wave initial conditions to compare how different schemes advect discontinuities.

You should also implement one of the schemes from chapter 6 of the notes to show that schemes exist that can do better than CTCS and FTBS


